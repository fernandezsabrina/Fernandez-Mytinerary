[{"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\index.js":"1","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\App.js":"2","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Header.js":"3","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Main.js":"4","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Footer.js":"5","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Cities.js":"6","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Carrusel.js":"7","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Slide.js":"8","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\City.js":"9","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\mainReducer.js":"10","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Itineraries.js":"11","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\CitiesReducer.js":"12","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\ItineraryReducer.js":"13","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Actions\\CitiesActions.js":"14","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Actions\\citiesActions.js":"15","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\itineraryReducer.js":"16","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\citiesReducer.js":"17","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Actions\\itineraryActions.js":"18","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\LogIn.js":"19","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\SignUp.js":"20","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\authReducer.js":"21","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Actions\\authActions.js":"22","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\NewCity.js":"23","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Comments.js":"24"},{"size":437,"mtime":1611988075290,"results":"25","hashOfConfig":"26"},{"size":1875,"mtime":1612881242669,"results":"27","hashOfConfig":"26"},{"size":1889,"mtime":1612881386523,"results":"28","hashOfConfig":"26"},{"size":1113,"mtime":1611946959795,"results":"29","hashOfConfig":"26"},{"size":254,"mtime":1610929383906,"results":"30","hashOfConfig":"26"},{"size":2023,"mtime":1612443076128,"results":"31","hashOfConfig":"26"},{"size":793,"mtime":1610972546981,"results":"32","hashOfConfig":"26"},{"size":636,"mtime":1611463151680,"results":"33","hashOfConfig":"26"},{"size":2216,"mtime":1612291930524,"results":"34","hashOfConfig":"26"},{"size":336,"mtime":1612790864990,"results":"35","hashOfConfig":"26"},{"size":6012,"mtime":1613027164784,"results":"36","hashOfConfig":"26"},{"size":366,"mtime":1611966598202,"results":"37","hashOfConfig":"26"},{"size":0,"mtime":1611965181165,"results":"38","hashOfConfig":"26"},{"size":330,"mtime":1611966207386,"results":"39","hashOfConfig":"26"},{"size":788,"mtime":1615799717411,"results":"40","hashOfConfig":"26"},{"size":544,"mtime":1613024569732,"results":"41","hashOfConfig":"26"},{"size":939,"mtime":1612913476625,"results":"42","hashOfConfig":"26"},{"size":1550,"mtime":1615799743501,"results":"43","hashOfConfig":"26"},{"size":3333,"mtime":1612877960880,"results":"44","hashOfConfig":"26"},{"size":4855,"mtime":1612987401752,"results":"45","hashOfConfig":"26"},{"size":757,"mtime":1612790771638,"results":"46","hashOfConfig":"26"},{"size":1939,"mtime":1615799711905,"results":"47","hashOfConfig":"26"},{"size":2222,"mtime":1612913657683,"results":"48","hashOfConfig":"26"},{"size":766,"mtime":1613034239488,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"18cri9g",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\index.js",[],["109","110"],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\App.js",["111"],"import Header from './components/Header'\nimport Main from './components/Main'\nimport Footer from './components/Footer'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.css'\nimport Cities from './components/Cities'\nimport City from './components/City'\nimport SignUp from './components/SignUp'\nimport LogIn from './components/LogIn'\nimport NewCity from './components/NewCity'\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport authActions from './Redux/Actions/authActions';\nimport { useState } from 'react'\n\nconst App = (props) => {\n  const [reload, setReload] = useState(false)\n  if (props.loggedUser) {\n    var routes = <Switch>\n      <Route exact path=\"/\" component={Main} />\n      <Route path=\"/cities\" component={Cities} />\n      <Route path=\"/city/:nombreCiudad\" component={City} />\n      <Route path=\"/newcity\" component={NewCity} />\n      <Redirect to=\"/\" />\n    </Switch>\n  } else if (localStorage.getItem('token')) {\n    props.logFromLocalStorage(localStorage.getItem('token'))\n      .then(respuesta => {\n        if (respuesta === '/') setReload(!reload)\n  })\n} else {\n  var routes = <Switch>\n    <Route exact path=\"/\" component={Main} />\n    <Route path=\"/cities\" component={Cities} />\n    <Route path=\"/city/:nombreCiudad\" component={City} />\n    <Route path=\"/signup\" component={SignUp} />\n    <Route path=\"/login\" component={LogIn} />\n    <Redirect to=\"/\" />\n  </Switch>\n}\nconsole.log(\"estado actual de redux:\", props)\nreturn (\n  <>\n    <BrowserRouter>\n      <Header />\n      {routes}\n      <Footer />\n    </BrowserRouter>\n  </>\n);\n}\n\nconst mapStateToProps = state => {\n  return {\n    loggedUser: state.auth.loggedUser\n  }\n}\n\nconst mapDispatchToProps = {\n  logFromLocalStorage: authActions.logFromLocalStorage\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Header.js",["112","113","114"],"import imagen from '../assets/userblue.png'\r\nimport logo from '../assets/logomytinerary.png'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport authActions from '../Redux/Actions/authActions'\r\n\r\nconst Header = (props) => {\r\n    if (props.loggedUser) {\r\n        var links = <>\r\n            <NavLink to=\"/newcity\">Add City</NavLink>\r\n            <p className=\"logoutLink\" onClick={() => props.logoutUser()}>Log Out</p>\r\n        </>\r\n    } else {\r\n        var links = <>\r\n            <NavLink to=\"/signup\">Sign Up</NavLink>\r\n            <NavLink to=\"/login\">Log In</NavLink>\r\n        </>\r\n    }\r\n    return (\r\n        <>\r\n            <header>\r\n                {props.loggedUser ?\r\n                    <div className=\"centradoUser\">\r\n                        <div className=\"fotoUsuario\" style={{ backgroundImage: `url(${props.loggedUser.urlpic})`, backgroundSize: \"cover\", backgroundPosition: \"center\" }}></div>\r\n                        <p>Hello {props.loggedUser.username}!</p>\r\n                    </div>\r\n                    :\r\n                    <div><img className=\"fotoNoUsuario\" src={imagen}></img></div>\r\n                }\r\n\r\n                <nav>\r\n                    <NavLink exact to=\"/\">Home</NavLink>\r\n                    <NavLink to=\"/cities\">Cities</NavLink>\r\n                    {links}\r\n\r\n                </nav>\r\n\r\n            </header>\r\n            <div className=\"divLogo\">\r\n                <img className=\"fotoLogo\" src={logo}></img>\r\n                <p>Find your perfect trip, designed by insiders who know and love their cities.</p>\r\n\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.auth.loggedUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    logoutUser: authActions.logoutUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Main.js",["115","116","117","118"],"import Carrusel from \"../components/Carrusel\"\r\nimport flecha from '../assets/bluearrow.png'\r\nimport foto1 from '../assets/foto1.png'\r\nimport foto2 from '../assets/foto2.png'\r\nimport foto3 from '../assets/foto3.png'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Main = () => {\r\n\r\n    return (\r\n        <>\r\n            <main>\r\n                <div className=\"fotosMain\">\r\n                    <div><img src={foto1} className=\"fotosInicio\"></img></div>\r\n                    <div><img src={foto2} className=\"fotosInicio\"></img></div>\r\n                    <div><img src={foto3} className=\"fotosInicio\"></img></div>\r\n                </div>\r\n                <div className=\"divFlecha\">\r\n                    <Link to=\"/cities\">\r\n                        <div><img className=\"flecha\" src={flecha}></img></div>\r\n                    </Link>\r\n                    <Link to=\"/cities\">\r\n                        <p className=\"textoFlecha\">Let's plan your next trip!</p>\r\n                    </Link>\r\n\r\n                </div>\r\n\r\n                <Carrusel />\r\n            </main>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Main","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Cities.js",["119","120","121","122"],"import { Link } from 'react-router-dom'\r\nimport { useEffect, useState } from 'react'\r\nimport lupa from '../assets/lupa.png'\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { connect } from 'react-redux'\r\nimport citiesActions from '../Redux/Actions/citiesActions';\r\n\r\nconst Cities = (props) => {\r\n    \r\n    useEffect(() => {\r\n        props.listarCiudades()\r\n        window.scrollTo(0, 0)\r\n    }, [])\r\n\r\n    const filtro = e => {\r\n\r\n        const valorFiltro= e.target.value\r\n        props.filtrarCiudades(valorFiltro)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"cities\">\r\n                <h1 className=\"citiesTitulo\">CITIES</h1>\r\n                <div className=\"divBuscador\">\r\n                    <div><img src={lupa}></img></div>\r\n                    <input className=\"inputSearch\" type=\"text\" name=\"buscador\" id=\"buscador\" placeholder=\"Search city\" onChange={filtro}></input>\r\n                </div>\r\n                {props.ciudadesFiltradas.length > 0 ?\r\n\r\n                    props.ciudadesFiltradas.map(({ name, url, _id }, i) => {\r\n                        return (\r\n                            <div key={i} className=\"divCiudad\" style={{ backgroundImage: `url('${url}')`, backgroundSize: \"cover\", backgroundPosition: \"center\" }}>\r\n                                <Link to={`/city/${_id}`} style={{ width: \"100%\" }}><p className=\"pCiudades\">{name}</p></Link>\r\n                            </div>\r\n                        )\r\n                    })\r\n                    :\r\n                    props.ciudadesFiltradas.length === 0 && <p>No results for your search</p>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cities: state.cities.cities,\r\n        ciudadesFiltradas: state.cities.ciudadesFiltradas\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\r\n    listarCiudades: citiesActions.listarCiudades,\r\n    filtrarCiudades: citiesActions.filtrarCiudades\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cities)","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Carrusel.js",[],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Slide.js",[],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\City.js",["123","124"],"import { useEffect, useState } from \"react\"\r\nimport { Link } from 'react-router-dom'\r\nimport world from \"../assets/world.png\"\r\nimport Itinerary from './Itineraries'\r\nimport { connect } from 'react-redux'\r\nimport citiesActions from '../Redux/Actions/citiesActions'\r\nimport itinerariesActions from '../Redux/Actions/itineraryActions'\r\n\r\nconst City = (props) => {\r\n    const [ciudad, setCiudad] = useState({})\r\n\r\n    useEffect(() => {\r\n        const id = (props.match.params.nombreCiudad)\r\n        const city = props.cities.filter(city => city._id === id)\r\n        setCiudad(city[0])\r\n        props.listarItinerarios(id)\r\n        window.scrollTo(0, 0)\r\n    }, [])\r\n    if (props.cities.length !== 0) {\r\n\r\n        return (\r\n            <div className=\"ciudadSin\">\r\n                <div className=\"tituloCiudad\"><h1>{ciudad.name}</h1></div>\r\n\r\n                <div className=\"ciudadUnica\" style={{ backgroundImage: `url('${ciudad.url}')`, backgroundSize: \"cover\", backgroundPosition: \"center\" }}>\r\n\r\n                </div>\r\n                {props.itineraries.length > 0 ?\r\n                    props.itineraries.map(itinerary => {\r\n                        return <Itinerary itinerary={itinerary}></Itinerary>\r\n                    })\r\n                    :\r\n                    <div className=\"noItinerariesDiv\">\r\n                        <h2>Sorry, we have no itineraries yet...</h2>\r\n                    </div>\r\n                }\r\n\r\n                <Link to=\"/cities\">\r\n                    <div className=\"divRedirect\">\r\n                        <img src={world} className=\"mundoCity\"></img>\r\n                        <p>Go back to cities</p>\r\n                    </div>\r\n\r\n                </Link>\r\n            </div >\r\n\r\n        )\r\n    } else {\r\n        props.history.push('/cities')\r\n        return (\r\n            <>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cities: state.cities.cities,\r\n        itineraries: state.itinerary.itineraries\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\r\n    listarCiudades: citiesActions.listarCiudades,\r\n    listarItinerarios: itinerariesActions.listarItinerarios\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(City)","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\mainReducer.js",[],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Itineraries.js",["125","126","127"],"import { useState } from \"react\"\r\nimport { connect } from 'react-redux'\r\nimport itinerariesActions from '../Redux/Actions/itineraryActions'\r\nimport emptyLike from '../assets/emptyLike.png'\r\nimport fullLike from '../assets/fullLike.png'\r\nimport clock from '../assets/clock.png'\r\nimport Swal from 'sweetalert2'\r\nimport Comments from './Comments'\r\n\r\nconst Itinerary = (props) => {\r\n    \r\n    const [visible, setVisible] = useState(false)\r\n    const [newComment, setNewComment] = useState({})\r\n    const [liked, setLiked] = useState(false)\r\n\r\n    const leerInput = e => {\r\n        const valor = e.target.value\r\n        const campo = e.target.name\r\n        setNewComment({\r\n            ...newComment,\r\n            [campo]: valor,\r\n            idIt: props.itinerary._id,\r\n            idUser: props.loggedUser.id\r\n        })\r\n    }\r\n\r\n    const validarComment = async e => {\r\n        e.preventDefault()\r\n        if (newComment.comment === '' || !newComment.comment) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: \"You can't send your comment empty!\",\r\n            })\r\n            return false\r\n        }\r\n\r\n        const respuesta = await props.crearComentario(newComment)\r\n        if (respuesta && !respuesta.success) {\r\n\r\n        } else {\r\n\r\n            Swal.fire(\r\n                'Great!',\r\n                'You sent a comment!',\r\n                'success'\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    const likear = e => {\r\n        if (!props.loggedUser) {\r\n            alert(\"You must be logged to like an itinerary\")\r\n        } else if (!liked) {\r\n            setLiked(true)\r\n        } else {\r\n            setLiked(false)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"itinerariesDiv\">\r\n            <div className=\"contenedorIt\">\r\n                <div className=\"divUserIti\">\r\n                    <div className=\"userPicIti\" style={{ backgroundImage: `url(${props.itinerary.userPic})`, backgroundSize: \"cover\" }}></div>\r\n                    <div><h2>{props.itinerary.userName}</h2></div>\r\n                </div>\r\n                <div className=\"divInfoIti\">\r\n                    <div><h1>{props.itinerary.title}</h1></div>\r\n                    <div className=\"divLikes\">\r\n                        <div className=\"itineraryAdds\">\r\n                            {!liked ?\r\n                                <div><img src={emptyLike} style={{ width: \"2.5vw\", marginBottom: \"1vh\" }} onClick={likear}></img></div>\r\n                                :\r\n                                <div><img src={fullLike} style={{ width: \"2.5vw\", marginBottom: \"1vh\" }} onClick={likear}></img></div>\r\n                            }\r\n\r\n\r\n                            <h4>{props.itinerary.likes}</h4>\r\n                        </div>\r\n                        <div className=\"itineraryAdds\">\r\n                            <div><img src={clock} style={{ width: \"3vw\", marginBottom: \"1vh\" }}></img></div>\r\n                            <h4>{props.itinerary.duration}hs</h4>\r\n                        </div>\r\n                        <div className=\"itineraryAdds\">\r\n                            <div className=\"money\">{Array(props.itinerary.price).fill(\"$\")}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"hashtags\">\r\n                        {props.itinerary.hashtag.map(hash => {\r\n                            return <h4>{hash}</h4>\r\n                        })}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            {visible &&\r\n                <div className=\"visible\">\r\n                    <div className=\"activities\">\r\n                        {props.itinerary.activities.map(({ activityPic, activityTitle }) => {\r\n                            return (\r\n                                <div className=\"activity\">\r\n                                    <div className=\"activityPic\" style={{ backgroundImage: `url(${activityPic})`, backgroundSize: \"cover\", backgroundPosition: \"center\" }}></div>\r\n                                    <p>{activityTitle}</p>\r\n                                </div>\r\n                            )\r\n\r\n                        })}\r\n\r\n                    </div>\r\n                    <div className=\"comments\">\r\n                        {props.itinerary.comments.length === 0 ? <p>No comments yet...</p>\r\n                            :\r\n                            <div className=\"commentBox\">\r\n                                {props.itinerary.comments.map(comentario => {\r\n                                    return(\r\n                                        <Comments comentario={comentario}></Comments>\r\n                                    )\r\n                                })}\r\n                            </div>}\r\n                        {props.loggedUser ?\r\n                            <div style={{ display: \"flex\", width: \"100%\", justifyContent: \"space-evenly\" }}>\r\n                                <input type=\"text\" name=\"comment\" placeholder=\"Write your comment here...\" onChange={leerInput}></input>\r\n                                <button className=\"btnForm\" onClick={validarComment}>Send</button>\r\n                            </div>\r\n                            :\r\n                            <input type=\"text\" name=\"campo_de_texto\" value=\"You must be logged to create a comment...\" readOnly=\"readOnly\" />\r\n                        }\r\n\r\n                    </div>\r\n                </div>}\r\n            <div>\r\n                <button className=\"botonIti\" onClick={() => setVisible(!visible)}> <p>view all</p></button >\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.auth.loggedUser,\r\n        comment: state.itinerary.comment\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\r\n    crearComentario: itinerariesActions.crearComentario,\r\n    obtenerComentario: itinerariesActions.obtenerComentario\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Itinerary)","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\CitiesReducer.js",["128"],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\ItineraryReducer.js",[],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Actions\\CitiesActions.js",[],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Actions\\citiesActions.js",[],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\itineraryReducer.js",["129"],"const initialState = {\r\n    itineraries: [],\r\n    comments: []\r\n}\r\n\r\nconst itineraryReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"ALL_ITINERARIES\":\r\n            return {\r\n                ...state,\r\n                itineraries: action.payload\r\n            }\r\n            break\r\n        case \"GET_COMMENTS\":\r\n            return{\r\n                ...state,\r\n                comments: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default itineraryReducer","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\citiesReducer.js",["130","131","132","133"],"const initialState = {\r\n    cities: [],\r\n    ciudadesFiltradas: [],\r\n    nuevaCiudad: {}\r\n}\r\n\r\nconst citiesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"ALL_CITIES\":\r\n            return {\r\n                ...state,\r\n                cities: action.payload,\r\n                ciudadesFiltradas: action.payload\r\n            }\r\n            break\r\n        case \"FILTER_CITIES\":\r\n            const filtradoCiudades = state.cities.filter(city => city.name.toLowerCase().indexOf(action.payload.trim().toLowerCase()) == 0)\r\n            return {\r\n                ...state,\r\n                ciudadesFiltradas: filtradoCiudades\r\n            }\r\n            break\r\n\r\n        case \"NEW_CITY\":\r\n            return {\r\n                ...state,\r\n                nuevaCiudad: action.payload\r\n            }\r\n            break\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default citiesReducer","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Actions\\itineraryActions.js",[],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\LogIn.js",[],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\SignUp.js",[],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\authReducer.js",[],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Actions\\authActions.js",[],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\NewCity.js",[],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Comments.js",["134","135"],"import { useEffect, useState } from \"react\"\r\n\r\nconst Comments = (props) => {\r\n\r\n    // const [comments, setComments] = useState([])\r\n\r\n    // useEffect(() => {\r\n    //     setComments(props.comentario)\r\n    // }, [props])\r\n\r\n    return (\r\n        <div className=\"commentUser\">\r\n            <div style={{ display: \"flex\" }}>\r\n                <div style={{ backgroundImage: `url('${props.comentario.userID.urlpic}')`, backgroundSize: \"cover\", backgroundPosition: \"center\", width: \"50px\", height: \"100%\", borderRadius: \"50px\" }}></div>\r\n                <div><p>{props.comentario.userID.name} says:</p></div>\r\n                <div style={{ marginLeft: \"1vw\" }}>{props.comentario.comment}</div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Comments",["136","137"],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":32,"column":7,"nodeType":"144","messageId":"145","endLine":32,"endColumn":13},{"ruleId":"142","severity":1,"message":"146","line":14,"column":13,"nodeType":"144","messageId":"145","endLine":14,"endColumn":18},{"ruleId":"147","severity":1,"message":"148","line":28,"column":26,"nodeType":"149","endLine":28,"endColumn":70},{"ruleId":"147","severity":1,"message":"148","line":40,"column":17,"nodeType":"149","endLine":40,"endColumn":54},{"ruleId":"147","severity":1,"message":"148","line":14,"column":26,"nodeType":"149","endLine":14,"endColumn":67},{"ruleId":"147","severity":1,"message":"148","line":15,"column":26,"nodeType":"149","endLine":15,"endColumn":67},{"ruleId":"147","severity":1,"message":"148","line":16,"column":26,"nodeType":"149","endLine":16,"endColumn":67},{"ruleId":"147","severity":1,"message":"148","line":20,"column":30,"nodeType":"149","endLine":20,"endColumn":67},{"ruleId":"150","severity":1,"message":"151","line":2,"column":21,"nodeType":"144","messageId":"152","endLine":2,"endColumn":29},{"ruleId":"150","severity":1,"message":"153","line":4,"column":10,"nodeType":"144","messageId":"152","endLine":4,"endColumn":17},{"ruleId":"154","severity":1,"message":"155","line":13,"column":8,"nodeType":"156","endLine":13,"endColumn":10,"suggestions":"157"},{"ruleId":"147","severity":1,"message":"148","line":26,"column":26,"nodeType":"149","endLine":26,"endColumn":42},{"ruleId":"154","severity":1,"message":"155","line":18,"column":8,"nodeType":"156","endLine":18,"endColumn":10,"suggestions":"158"},{"ruleId":"147","severity":1,"message":"148","line":40,"column":25,"nodeType":"149","endLine":40,"endColumn":64},{"ruleId":"147","severity":1,"message":"148","line":75,"column":38,"nodeType":"149","endLine":75,"endColumn":124},{"ruleId":"147","severity":1,"message":"148","line":77,"column":38,"nodeType":"149","endLine":77,"endColumn":123},{"ruleId":"147","severity":1,"message":"148","line":84,"column":34,"nodeType":"149","endLine":84,"endColumn":97},{"ruleId":"159","severity":1,"message":"160","line":12,"column":12,"nodeType":"161","messageId":"162","endLine":12,"endColumn":17},{"ruleId":"159","severity":1,"message":"160","line":13,"column":13,"nodeType":"161","messageId":"162","endLine":13,"endColumn":18},{"ruleId":"159","severity":1,"message":"160","line":15,"column":13,"nodeType":"161","messageId":"162","endLine":15,"endColumn":18},{"ruleId":"163","severity":1,"message":"164","line":17,"column":135,"nodeType":"165","messageId":"166","endLine":17,"endColumn":137},{"ruleId":"159","severity":1,"message":"160","line":22,"column":13,"nodeType":"161","messageId":"162","endLine":22,"endColumn":18},{"ruleId":"159","severity":1,"message":"160","line":29,"column":13,"nodeType":"161","messageId":"162","endLine":29,"endColumn":18},{"ruleId":"150","severity":1,"message":"167","line":1,"column":10,"nodeType":"144","messageId":"152","endLine":1,"endColumn":19},{"ruleId":"150","severity":1,"message":"151","line":1,"column":21,"nodeType":"144","messageId":"152","endLine":1,"endColumn":29},{"ruleId":"138","replacedBy":"168"},{"ruleId":"140","replacedBy":"169"},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-redeclare","'routes' is already defined.","Identifier","redeclared","'links' is already defined.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","unusedVar","'Spinner' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["172"],["173"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.",["170"],["171"],"no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"174","fix":"176"},"Update the dependencies array to be: [props]",{"range":"177","text":"178"},{"range":"179","text":"178"},[399,401],"[props]",[657,659]]