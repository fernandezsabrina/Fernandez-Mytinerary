[{"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\index.js":"1","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\App.js":"2","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Header.js":"3","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Main.js":"4","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Footer.js":"5","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Cities.js":"6","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Carrusel.js":"7","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Slide.js":"8","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\City.js":"9","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\mainReducer.js":"10","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Itineraries.js":"11","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\CitiesReducer.js":"12","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\ItineraryReducer.js":"13","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\CityReducer.js":"14","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Actions\\CitiesActions.js":"15","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Actions\\citiesActions.js":"16","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\citiesReducer.js":"17","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\cityReducer.js":"18","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\itineraryReducer.js":"19"},{"size":437,"mtime":1611963040531,"results":"20","hashOfConfig":"21"},{"size":1128,"mtime":1611965660284,"results":"22","hashOfConfig":"21"},{"size":756,"mtime":1611196647382,"results":"23","hashOfConfig":"21"},{"size":1113,"mtime":1611946959795,"results":"24","hashOfConfig":"21"},{"size":254,"mtime":1610929383906,"results":"25","hashOfConfig":"21"},{"size":2242,"mtime":1611963907486,"results":"26","hashOfConfig":"21"},{"size":793,"mtime":1610972546981,"results":"27","hashOfConfig":"21"},{"size":636,"mtime":1611463151680,"results":"28","hashOfConfig":"21"},{"size":1157,"mtime":1611858882469,"results":"29","hashOfConfig":"21"},{"size":336,"mtime":1611965299644,"results":"30","hashOfConfig":"21"},{"size":1131,"mtime":1611867814465,"results":"31","hashOfConfig":"21"},{"size":366,"mtime":1611965224149,"results":"32","hashOfConfig":"21"},{"size":0,"mtime":1611965181165,"results":"33","hashOfConfig":"21"},{"size":0,"mtime":1611965170844,"results":"34","hashOfConfig":"21"},{"size":330,"mtime":1611965215413,"results":"35","hashOfConfig":"21"},{"size":330,"mtime":1611965215413,"results":"36","hashOfConfig":"21"},{"size":366,"mtime":1611965224149,"results":"37","hashOfConfig":"21"},{"size":0,"mtime":1611965170844,"results":"38","hashOfConfig":"21"},{"size":0,"mtime":1611965181165,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"18cri9g",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\index.js",[],["84","85"],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\App.js",["86"],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Header.js",["87","88"],"import imagen from '../assets/userblue.png'\r\nimport logo from '../assets/logomytinerary.png'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n\r\n                <div><img className=\"fotoUsuario\" src={imagen}></img></div>\r\n                <nav>\r\n                    <NavLink exact to=\"/\">Home</NavLink>\r\n                    <NavLink to=\"/cities\">Cities</NavLink>\r\n                </nav>\r\n\r\n            </header>\r\n            <div className=\"divLogo\">\r\n                <img className=\"fotoLogo\" src={logo}></img>\r\n                <p>Find your perfect trip, designed by insiders who know and love their cities.</p>\r\n\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Main.js",["89","90","91","92"],"import Carrusel from \"../components/Carrusel\"\r\nimport flecha from '../assets/bluearrow.png'\r\nimport foto1 from '../assets/foto1.png'\r\nimport foto2 from '../assets/foto2.png'\r\nimport foto3 from '../assets/foto3.png'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Main = () => {\r\n\r\n    return (\r\n        <>\r\n            <main>\r\n                <div className=\"fotosMain\">\r\n                    <div><img src={foto1} className=\"fotosInicio\"></img></div>\r\n                    <div><img src={foto2} className=\"fotosInicio\"></img></div>\r\n                    <div><img src={foto3} className=\"fotosInicio\"></img></div>\r\n                </div>\r\n                <div className=\"divFlecha\">\r\n                    <Link to=\"/cities\">\r\n                        <div><img className=\"flecha\" src={flecha}></img></div>\r\n                    </Link>\r\n                    <Link to=\"/cities\">\r\n                        <p className=\"textoFlecha\">Let's plan your next trip!</p>\r\n                    </Link>\r\n\r\n                </div>\r\n\r\n                <Carrusel />\r\n            </main>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Main","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Cities.js",["93","94","95"],"import { Link } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react'\r\nimport lupa from '../assets/lupa.png'\r\nimport { Spinner } from 'react-bootstrap';\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nconst Cities = () => {\r\n\r\n    const [ciudades, setCiudades] = useState([])\r\n    const [ciudadesBuscador, setCiudadesBuscador] = useState('')\r\n    const [ciudadFiltrada, setCiudadFiltrada] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        fetch('http://localhost:4000/cities')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setCiudades(data.respuesta)\r\n                    setLoading(false)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setCiudadFiltrada(\r\n            ciudades.filter(ciudad => {\r\n                return ciudad.name.toLowerCase().indexOf(ciudadesBuscador.toLowerCase()) == 0\r\n            })\r\n        )\r\n\r\n    }, [ciudadesBuscador, ciudades])\r\n\r\n    if (loading) {\r\n        return (\r\n            {Spinner}\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"cities\">\r\n                <h1 className=\"citiesTitulo\">CITIES</h1>\r\n                <div className=\"divBuscador\">\r\n                    <div><img src={lupa}></img></div>\r\n                    <input type=\"text\" name=\"buscador\" id=\"buscador\" placeholder=\"Search city\" onChange={e => setCiudadesBuscador(e.target.value.trim())}></input>\r\n                </div>\r\n                {!loading && ciudadFiltrada.length > 0 ?\r\n\r\n                    ciudadFiltrada.map(({ name, url, _id }, i) => {\r\n                        return (\r\n                            <div key={i} className=\"divCiudad\" style={{ backgroundImage: `url('${url}')`, backgroundSize: \"cover\", backgroundPosition: \"center\" }}>\r\n                                <Link to={`/city/${_id}`} style={{ width: \"100%\" }}><p className=\"pCiudades\">{name}</p></Link>\r\n                            </div>\r\n                        )\r\n                    })\r\n                    :\r\n                     ciudadFiltrada.length === 0 && <p>No results for your search</p> \r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cities","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Carrusel.js",[],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Slide.js",[],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\City.js",["96","97"],"import { useEffect, useState } from \"react\"\r\nimport { Link } from 'react-router-dom'\r\nimport world from \"../assets/world.png\"\r\nimport Itinerary from './Itineraries'\r\n\r\nconst City = (props) => {\r\n    const [ciudad, setCiudad] = useState({})\r\n\r\n    useEffect(() => {\r\n        const id = props.match.params.nombreCiudad\r\n        fetch('http://localhost:4000/city/' + id)\r\n            .then(respuesta => respuesta.json())\r\n            .then(data => setCiudad(data.respuesta))\r\n        window.scrollTo(0, 0)\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"ciudadSin\">\r\n            <div className=\"tituloCiudad\"><h1>{ciudad.name}</h1></div>\r\n\r\n            <div className=\"ciudadUnica\" style={{ backgroundImage: `url('${ciudad.url}')`, backgroundSize: \"cover\", backgroundPosition: \"center\" }}>\r\n\r\n            </div>\r\n            <Itinerary></Itinerary>\r\n        \r\n            <Link to=\"/cities\">\r\n                <div className=\"divRedirect\">\r\n                    <img src={world} className=\"mundoCity\"></img>\r\n                    <p>Go back to cities</p>\r\n                </div>\r\n\r\n            </Link>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default City","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\mainReducer.js",[],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\components\\Itineraries.js",["98","99"],"import { useEffect, useState } from \"react\"\r\n\r\n\r\n\r\nconst Itinerary = () => {\r\n    const [itineraries, setItineraries] = useState([])\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:4000/itineraries')\r\n            .then(respuesta => respuesta.json())\r\n            .then(data => setItineraries(data.respuesta))\r\n    }, [])\r\n\r\n    console.log(itineraries)\r\n    return (\r\n        <div className=\"itinerariesDiv\">\r\n            <div className=\"divUserIti\">\r\n                <div className=\"userPicIti\"></div>\r\n                <div><h2>UserName</h2></div>\r\n                </div>\r\n            <div className=\"divInfoIti\">\r\n                <div><h1>Itinerary Name</h1></div>\r\n                <div className=\"divLikes\">\r\n                    <div><h4>Likes</h4></div>\r\n                    <div><h4>Duration</h4></div>\r\n                    <div><h4>Price</h4></div>\r\n                </div>\r\n                <div><h4>#Hashtags</h4></div>\r\n                <button className=\"botonIti\"><p>view all</p></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Itinerary","C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\CitiesReducer.js",["100"],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\ItineraryReducer.js",[],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\CityReducer.js",[],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Actions\\CitiesActions.js",[],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Actions\\citiesActions.js",[],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\citiesReducer.js",["101"],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\cityReducer.js",[],"C:\\Users\\crist\\Documents\\sab\\SabriMindhub\\Sabrina-Mytinerary\\frontend\\src\\Redux\\Reducers\\itineraryReducer.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":17,"column":6,"nodeType":"108","endLine":17,"endColumn":8,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":11,"column":22,"nodeType":"112","endLine":11,"endColumn":64},{"ruleId":"110","severity":1,"message":"111","line":19,"column":17,"nodeType":"112","endLine":19,"endColumn":54},{"ruleId":"110","severity":1,"message":"111","line":14,"column":26,"nodeType":"112","endLine":14,"endColumn":67},{"ruleId":"110","severity":1,"message":"111","line":15,"column":26,"nodeType":"112","endLine":15,"endColumn":67},{"ruleId":"110","severity":1,"message":"111","line":16,"column":26,"nodeType":"112","endLine":16,"endColumn":67},{"ruleId":"110","severity":1,"message":"111","line":20,"column":30,"nodeType":"112","endLine":20,"endColumn":67},{"ruleId":"113","severity":1,"message":"114","line":5,"column":9,"nodeType":"115","messageId":"116","endLine":5,"endColumn":16},{"ruleId":"117","severity":1,"message":"118","line":28,"column":90,"nodeType":"119","messageId":"120","endLine":28,"endColumn":92},{"ruleId":"110","severity":1,"message":"111","line":45,"column":26,"nodeType":"112","endLine":45,"endColumn":42},{"ruleId":"106","severity":1,"message":"121","line":16,"column":8,"nodeType":"108","endLine":16,"endColumn":10,"suggestions":"122"},{"ruleId":"110","severity":1,"message":"111","line":30,"column":21,"nodeType":"112","endLine":30,"endColumn":60},{"ruleId":"113","severity":1,"message":"123","line":7,"column":12,"nodeType":"115","messageId":"116","endLine":7,"endColumn":19},{"ruleId":"113","severity":1,"message":"124","line":7,"column":21,"nodeType":"115","messageId":"116","endLine":7,"endColumn":31},{"ruleId":"125","severity":1,"message":"126","line":12,"column":12,"nodeType":"127","messageId":"128","endLine":12,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":12,"column":12,"nodeType":"127","messageId":"128","endLine":12,"endColumn":17},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["131"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'props.match.params.nombreCiudad'. Either include it or remove the dependency array.",["132"],"'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},"Update the dependencies array to be: [props]",{"range":"137","text":"138"},"Update the dependencies array to be: [props.match.params.nombreCiudad]",{"range":"139","text":"140"},[549,551],"[props]",[513,515],"[props.match.params.nombreCiudad]"]